# GNU Make solution makefile autogenerated by Premake

ifndef config
  config=debug_native
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug_native)
  hiberlite_config = debug_native
  sqlite_config = debug_native
  hiberlite_test_config = debug_native
  catch_test_config = debug_native
  sample_config = debug_native
endif
ifeq ($(config),debug_x32)
  hiberlite_config = debug_x32
  sqlite_config = debug_x32
  hiberlite_test_config = debug_x32
  catch_test_config = debug_x32
  sample_config = debug_x32
endif
ifeq ($(config),debug_x64)
  hiberlite_config = debug_x64
  sqlite_config = debug_x64
  hiberlite_test_config = debug_x64
  catch_test_config = debug_x64
  sample_config = debug_x64
endif
ifeq ($(config),release_native)
  hiberlite_config = release_native
  sqlite_config = release_native
  hiberlite_test_config = release_native
  catch_test_config = release_native
  sample_config = release_native
endif
ifeq ($(config),release_x32)
  hiberlite_config = release_x32
  sqlite_config = release_x32
  hiberlite_test_config = release_x32
  catch_test_config = release_x32
  sample_config = release_x32
endif
ifeq ($(config),release_x64)
  hiberlite_config = release_x64
  sqlite_config = release_x64
  hiberlite_test_config = release_x64
  catch_test_config = release_x64
  sample_config = release_x64
endif

PROJECTS := hiberlite sqlite hiberlite_test catch_test sample

.PHONY: all clean help $(PROJECTS)

all: $(PROJECTS)

hiberlite: 
ifneq (,$(hiberlite_config))
	@echo "==== Building hiberlite ($(hiberlite_config)) ===="
	@${MAKE} --no-print-directory -C . -f hiberlite.make config=$(hiberlite_config)
endif

sqlite: 
ifneq (,$(sqlite_config))
	@echo "==== Building sqlite ($(sqlite_config)) ===="
	@${MAKE} --no-print-directory -C . -f sqlite.make config=$(sqlite_config)
endif

hiberlite_test: 
ifneq (,$(hiberlite_test_config))
	@echo "==== Building hiberlite_test ($(hiberlite_test_config)) ===="
	@${MAKE} --no-print-directory -C . -f hiberlite_test.make config=$(hiberlite_test_config)
endif

catch_test: 
ifneq (,$(catch_test_config))
	@echo "==== Building catch_test ($(catch_test_config)) ===="
	@${MAKE} --no-print-directory -C . -f catch_test.make config=$(catch_test_config)
endif

sample: 
ifneq (,$(sample_config))
	@echo "==== Building sample ($(sample_config)) ===="
	@${MAKE} --no-print-directory -C . -f sample.make config=$(sample_config)
endif

clean:
	@${MAKE} --no-print-directory -C . -f hiberlite.make clean
	@${MAKE} --no-print-directory -C . -f sqlite.make clean
	@${MAKE} --no-print-directory -C . -f hiberlite_test.make clean
	@${MAKE} --no-print-directory -C . -f catch_test.make clean
	@${MAKE} --no-print-directory -C . -f sample.make clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug_native"
	@echo "  debug_x32"
	@echo "  debug_x64"
	@echo "  release_native"
	@echo "  release_x32"
	@echo "  release_x64"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   hiberlite"
	@echo "   sqlite"
	@echo "   hiberlite_test"
	@echo "   catch_test"
	@echo "   sample"
	@echo ""
	@echo "For more information, see http://industriousone.com/premake/quick-start"
